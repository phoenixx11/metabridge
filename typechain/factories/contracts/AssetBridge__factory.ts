/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetBridge,
  AssetBridgeInterface,
} from "../../contracts/AssetBridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AssetBridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralValue",
        type: "uint256",
      },
    ],
    name: "AssetCollateralized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "AssetRentalEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rentalPeriod",
        type: "uint256",
      },
    ],
    name: "AssetRentalStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralValue",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCollateralized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "bridgeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "collateralizeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
    ],
    name: "endRental",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rentalPeriod",
        type: "uint256",
      },
    ],
    name: "rentAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentals",
    outputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rentalPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rentalStart",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
    ],
    name: "withdrawAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bbf806100a56000396000f3fe60806040526004361061009c5760003560e01c8063af94a1d111610064578063af94a1d114610145578063b042ce94146101c2578063c0e22424146101d5578063cf35bdd0146101f5578063eafe7a7414610284578063f2fde38b146102a857600080fd5b80630e89d066146100a1578063715018a6146100c35780638d92fdf3146100d85780638da5cb5b146100f857806397491d6f14610125575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610adb565b6102c8565b005b3480156100cf57600080fd5b506100c161041a565b3480156100e457600080fd5b506100c16100f3366004610b05565b61042e565b34801561010457600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561013157600080fd5b506100c1610140366004610b05565b6105a8565b34801561015157600080fd5b50610196610160366004610b05565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b0390911692919060ff1684565b604080516001600160a01b0390951685526020850193909352918301521515606082015260800161011c565b6100c16101d0366004610b1e565b6106db565b3480156101e157600080fd5b506100c16101f0366004610b1e565b6108f9565b34801561020157600080fd5b5061024f610210366004610b05565b6001602081905260009182526040909120805491810154600282015460038301546004909301546001600160a01b039485169490921692909160ff1685565b604080516001600160a01b0396871681529590941660208601529284019190915260608301521515608082015260a00161011c565b34801561029057600080fd5b5061029a60025481565b60405190815260200161011c565b3480156102b457600080fd5b506100c16102c3366004610b40565b610a04565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401600060405180830381600087803b15801561031657600080fd5b505af115801561032a573d6000803e3d6000fd5b50506040805160a081018252338082526001600160a01b0387811660208085018281528587018a8152600060608801818152608089018281526002805484526001808852938c90209a518b546001600160a01b0319908116918b16919091178c559551938b018054909616939098169290921790935590518786015590516003870155516004909501805460ff191695151595909517909455905484519182529281018790529094509092507fd5cf9274a47774068bbad7d31ef7518d278e124b71a73beff6b246f431e9c6a1910160405180910390a36002805490600061041183610b62565b91905055505050565b610422610a42565b61042c6000610a6f565b565b610436610a42565b600081815260016020526040902080546001600160a01b03166104975760405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b6001810154815460028301546040516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b505082546001600160a01b0319908116845560018401805490911690555050600060028201819055600380830182905560048301805460ff19169055838252602081905260409091209081015460ff16156105a35760038101805460ff1916905580546040516001600160a01b039091169084907fe2514d838adb15c2991195dd5f6dd39d5b1c916c2a914bf8e8824bcb177d411090600090a35b505050565b600081815260036020818152604080842060019092529092209082015460ff166106145760405162461bcd60e51b815260206004820152601f60248201527f4e6f206163746976652072656e74616c20666f72207468697320617373657400604482015260640161048e565b81546001600160a01b0316331480610635575080546001600160a01b031633145b6106915760405162461bcd60e51b815260206004820152602760248201527f4f6e6c792072656e746572206f72206f776e65722063616e20656e6420746865604482015266081c995b9d185b60ca1b606482015260840161048e565b60038201805460ff1916905581546040516001600160a01b039091169084907fe2514d838adb15c2991195dd5f6dd39d5b1c916c2a914bf8e8824bcb177d411090600090a3505050565b60008281526001602052604090208054336001600160a01b039091160361074e5760405162461bcd60e51b815260206004820152602160248201527f4f776e65722063616e6e6f742072656e74207468656972206f776e20617373656044820152601d60fa1b606482015260840161048e565b600481015460ff166107a25760405162461bcd60e51b815260206004820152601860248201527f4173736574206e6f7420636f6c6c61746572616c697a65640000000000000000604482015260640161048e565b600034116107f25760405162461bcd60e51b815260206004820152601760248201527f52656e74616c207061796d656e74207265717569726564000000000000000000604482015260640161048e565b60008381526003602081905260409091209081015460ff161561084e5760405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08185b1c9958591e481c995b9d195960621b604482015260640161048e565b604080516080810182523380825260208083018781524284860190815260016060860181815260008c8152600380875290899020975188546001600160a01b0319166001600160a01b0390911617885593519187019190915590516002860155519301805460ff191693151593909317909255915185815286917f79e0c53d35924cbe2374ab20a6341b505c247ea9fc2d50e2939ddf6208b9591b910160405180910390a350505050565b600082815260016020526040902080546001600160a01b031633146109565760405162461bcd60e51b81526020600482015260136024820152722737ba103a34329030b9b9b2ba1037bbb732b960691b604482015260640161048e565b600481015460ff16156109ab5760405162461bcd60e51b815260206004820152601c60248201527f417373657420616c726561647920636f6c6c61746572616c697a656400000000604482015260640161048e565b6003810182905560048101805460ff19166001179055604051339084907f63bc313c146cbd1bff6cf146020d758f8ad19ed5b45d50c9c8f0d6c2df0f365c906109f79086815260200190565b60405180910390a3505050565b610a0c610a42565b6001600160a01b038116610a3657604051631e4fbdf760e01b81526000600482015260240161048e565b610a3f81610a6f565b50565b6000546001600160a01b0316331461042c5760405163118cdaa760e01b815233600482015260240161048e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610ad657600080fd5b919050565b60008060408385031215610aee57600080fd5b610af783610abf565b946020939093013593505050565b600060208284031215610b1757600080fd5b5035919050565b60008060408385031215610b3157600080fd5b50508035926020909101359150565b600060208284031215610b5257600080fd5b610b5b82610abf565b9392505050565b600060018201610b8257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d87e16b4dc2447ffe75c6c31a08c538fd9b305f6daa20237123da99b4b88b1cb64736f6c63430008140033";

type AssetBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetBridge__factory extends ContractFactory {
  constructor(...args: AssetBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AssetBridge> {
    return super.deploy(overrides || {}) as Promise<AssetBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetBridge {
    return super.attach(address) as AssetBridge;
  }
  override connect(signer: Signer): AssetBridge__factory {
    return super.connect(signer) as AssetBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetBridgeInterface {
    return new utils.Interface(_abi) as AssetBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetBridge {
    return new Contract(address, _abi, signerOrProvider) as AssetBridge;
  }
}
